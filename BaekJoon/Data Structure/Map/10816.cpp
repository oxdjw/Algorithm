/*
문제
숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.

입력
첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이 주어진다. 둘째 줄에는 숫자 카드에 적혀있는 정수가 주어진다. 숫자 카드에 적혀있는 수는 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

셋째 줄에는 M(1 ≤ M ≤ 500,000)이 주어진다. 넷째 줄에는 상근이가 몇 개 가지고 있는 숫자 카드인지 구해야 할 M개의 정수가 주어지며, 이 수는 공백으로 구분되어져 있다. 이 수도 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

출력
첫째 줄에 입력으로 주어진 M개의 수에 대해서, 각 수가 적힌 숫자 카드를 상근이가 몇 개 가지고 있는지를 공백으로 구분해 출력한다.

예제 입력 1 
10
6 3 2 10 10 10 -10 -10 7 3
8
10 9 -5 2 3 4 5 -10
예제 출력 1 
3 0 0 1 2 0 0 2
*/
#include <bits/stdc++.h>
using namespace std;


int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	
	unordered_map <int, int> m;
	int N, M;
	cin >> N;
	for (int i = 0; i < N; i++)
	{
		int ipt;
		cin >> ipt;
		m[ipt]++;
	}
	
	cin >> M;
	for (int i = 0; i < M; i++) 
	{
		int ipt;
		cin >> ipt;
		cout << m[ipt] << " ";
	}
}
/*
unordered map을 처음 써보았다
중복가능하게 오름차순 되는 자료구조로 빅오를 늘리지 않기 위해 unordered map을 써보았다
구글링을 통해서 [key]를 통해 바로 value값에 접근할 수 있다는 점, 0으로 초기화 되어있다는 점을 배웠다
입력 받은 수를 key로 활용하여 개수를 바로 세고 M을 입력받음과 동시에 출력함으로서
나름 효과적으로 짠 것 같다 ! 
*/
